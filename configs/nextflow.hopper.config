// Hopper specific configuration for micro wgs pipeline //

singularity{
  enabled = true
  runOptions = '--bind /fs1/ --bind /fs2/ --bind /local/'
}

process {
	executor='slurm'
	queue='grace-normal'
	time=2.h

	withName: ariba_run {
		container = "/fs1/pipelines/JASEN/container/ariba.sif"
		memory = '32 GB'
		publishDir = "/fs1/results_dev/jasen/ariba"
	}
	withName: ariba_summary {
		container = "/fs1/pipelines/JASEN/container/ariba.sif"
		publishDir = "/fs1/results_dev/jasen/ariba"
	}
	withName: 'bwa_mem|bwa_index' {
		container = "/fs1/pipelines/JASEN/container/bwa.sif"
		cpus = 16
		memory = '32 GB'
		time = '1h'
		publishDir = "/fs1/results_dev/jasen/bwa"
	}
	withName: 'samtools_sort|samtools_index' {
		container = "/fs1/pipelines/JASEN/container/samtools.sif"
		publishDir = "/fs1/results_dev/jasen/samtools"
	}
	withName: spades {
		container = "/fs1/pipelines/JASEN/container/spades.sif"
		cpus = 16
		memory = '64 GB'
		time = '2h'
		publishDir = "/fs1/results_dev/jasen/spades"
	}
	withName: skesa {
		container = "/fs1/pipelines/JASEN/container/skesa_2.4.0.sif"
		cpus = 16
		memory = '64 GB'
		time = '2h'
		publishDir = "/fs1/results_dev/jasen/skesa"
		ext.args = "--cores 4 --memory 48"
	}
	withName: quast {
		container = "/fs1/pipelines/JASEN/container/quast.sif"
		publishDir = "/fs1/results_dev/jasen/quast"
	}
	withName: mlst {
		container = "/fs1/pipelines/JASEN/container/mlst.sif"
		publishDir = "/fs1/results_dev/jasen/mlst"
	}
	withName: kraken {
		cpus = 16
		memory = '48 GB'
		time = '2h'
		container = "/fs1/pipelines/JASEN/container/kraken2.sif"
		publishDir = "/fs1/results_dev/jasen/kraken"
	}
	withName: bracken {
		cpus = 4
		memory = '12 GB'
		time = '2h'
		container = "/fs1/pipelines/JASEN/container/bracken.sif"
		publishDir = "/fs1/results_dev/jasen/kraken"
	}
	withName: resfinder {
		container = "/fs1/pipelines/JASEN/container/resfinder.sif"
		publishDir = "/fs1/results_dev/jasen/resfinder"
	}
	withName: virulencefinder {
		container = "/fs1/pipelines/JASEN/container/virulencefinder.sif"
		publishDir = "/fs1/results_dev/jasen/virulencefinder"
	}
	withName: freebayes {
		container = "/fs1/pipelines/JASEN/container/freebayes.sif"
		publishDir = "/fs1/results_dev/jasen/freebayes"
	}
	withName: 'chewbbaca_allelecall|chewbbaca_split_results|chewbbaca_split_missing_loci|chewbbaca_create_batch_list' {
		//executor='local'
		container = "/fs1/pipelines/JASEN/container/chewbbaca_3.1.0.sif"
		cpus = 7
		publishDir = "/fs1/results_dev/jasen/chewbbaca"
	}
	withName: ariba_summary_to_json {
		container = "/fs1/pipelines/JASEN/container/perl_json_3A4.02.sif"
		publishDir = "/fs1/results_dev/jasen/ariba"
	}
	withName: post_align_qc {
		container = "/fs1/pipelines/JASEN/container/postAlignQc.sif"
		publishDir = "/fs1/results_dev/jasen/postalignqc"
	}
	withName: export_to_cdm {
		publishDir = "/fs1/results_dev/cron/qc"
	}
	withName: create_analysis_result {
		container = "/fs1/pipelines/JASEN/container/pythonScripts.sif"
		publishDir = "/fs1/results_dev/jasen/analysis_result"
	}
	withName: save_analysis_metadata {
		publishDir = "/fs1/results_dev/jasen/analysis_metadata"
	}
	withName: 'mask_polymorph_assembly' {
		publishDir = "/fs1/results_dev/jasen/misc"
	}
}

params {
	root = "/fs1/pipelines/JASEN"
	// DATABASES //
	resfinderDb = "${root}/assets/resfinder_db"
	pointfinderDb = "${root}/assets/pointfinder_db"
	virulencefinderDb = "${root}/assets/virulencefinder_db"
	mlstBlastDb = "${root}/assets/blast/mlst.fa"
	//krakenDb = "/fs1/resources/ref/micro/krakenstd"
	// INPUT & OUTPUT //
	localTempDir = "/local/scratch"
	workDir = "/fs1/ryan/pipelines/jasen/wd"
	publishDir = ""
	publishDirMode = ""
	publishDirOverwrite = true
	outdir = ""
	args = ""
	prefix = ""
	// PIPELINE OPTIONS //
	strands = 2
	useKraken = false
	useSkesa = true // To use spades set useSkesa = false
}

profiles {
	staphylococcus_aureus {
		params.specie = "staphylococcus aureus"
		params.genomeReference = "${params.root}/assets/genomes/CP000046.1.fasta"
		params.aribaReference = "${params.root}/assets/card/nucleotide_fasta_protein_homolog_model.fasta"
		params.cgmlstDb = "${params.root}/assets/cgmlst/staphylococcus_aureus/alleles_rereffed"
		params.cgmlstSchema = "${params.root}/assets/cgmlst/staphylococcus_aureus/bed/CP000046.1.bed"
		params.trainingFile = "${params.root}/assets/prodigal_training_files/Staphylococcus_aureus.trn"
		params.useVirulenceDbs = ['s.aureus_hostimm', 's.aureus_exoenzyme', 's.aureus_toxin']
	}

	escherichia_coli {
		params.specie = 'escherichia coli'
		params.genomeReference = "${params.root}/assets/genomes/GCF_000008865.2.fasta"
		params.aribaReference = "${params.root}/assets/card/nucleotide_fasta_protein_homolog_model.fasta"
		params.cgmlstDb = "${params.root}/assets/cgmlst/escherichia_coli/alleles"
		params.cgmlstSchema = "${params.root}/assets/cgmlst/escherichia_coli/bed"
		params.trainingFile = "${params.root}/assets/prodigal_training_files/Escherichia_coli.trn"
		params.useVirulenceDbs = ['virulence_ecoli']
	}

	klebsiella_pneumoniae {
		params.specie = 'klebsiella pneumoniae'
		params.genomeReference = "${params.root}/assets/genomes/NC_016845.1.fasta"
		params.aribaReference = "${params.root}/assets/card/nucleotide_fasta_protein_homolog_model.fasta"
		params.cgmlstDb = "${params.root}/assets/cgmlst/klebsiella_pneumoniae/alleles"
		params.cgmlstSchema = "${params.root}/assets/cgmlst/klebsiella_pneumoniae/bed"
		params.trainingFile = "${params.root}/assets/prodigal_training_files/Klebsiella_pneumoniae.trn"
	}
}
